{"version":3,"sources":["components/Header.jsx","contexts/CurrentUserContext.jsx","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/ImagePopup.jsx","utils/api.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/App.jsx","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","name","link","onMouseUp","type","aria-label","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","style","backgroundImage","avatar","about","map","key","Footer","ImagePopup","onClose","isImgPopupOpen","onClick","api","baseUrl","headers","this","fetch","then","res","ok","json","Promise","reject","status","method","body","JSON","stringify","authorization","PopupWithForm","title","isOpen","onSubmit","children","action","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleChange","e","target","value","useEffect","preventDefault","placeholder","autoComplete","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","defaultValue","AddPlacePopup","form","setForm","input","inputMode","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","handleESCclose","evt","document","addEventListener","removeEventListener","all","getUserData","getInitialItems","userInfo","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","deleteItem","filter","item","patchUserData","patchUserAvatar","postItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ce4b5714.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n      <header className='header'>\r\n        <img className='header__logo hover-style'\r\n          src={logo} alt='логотип Mesto Russia' />\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card({ \r\n  card, \r\n  onCardClick, \r\n  onCardDelete, \r\n  onCardLike \r\n}) { \r\n  const currentUser = useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (`card__recycle-bin hover-style ${isOwn ? '' : 'card__recycle-bin_hidden'}`);\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `card__like hover-style ${isLiked && 'card__like_active'}`;\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n\r\n  function handleDeleteClick () {\r\n    onCardDelete(card);\r\n  }\r\n  \r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  return (\r\n    <li className='card' >\r\n      <img className='card__image' alt={`${card.name}`} src={`${card.link}`} onMouseUp={handleClick}/>\r\n      <button className={cardDeleteButtonClassName} onMouseUp={handleDeleteClick}\r\n        type='button'\r\n        aria-label='Удалить' />\r\n      <h3 className='card__title'>{card.name}</h3>\r\n      <button className={cardLikeButtonClassName} onMouseUp={handleLikeClick}\r\n        type='button'\r\n        aria-label='Лайкнуть' />\r\n      <p className='card__like-count'>{card.likes.length}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ \r\n  onEditAvatar, \r\n  onEditProfile, \r\n  onAddPlace, \r\n  onCardClick, \r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className='content'>\r\n      <section className='profile'>\r\n        <button\r\n          onMouseUp={() => onEditAvatar()}\r\n          className='profile__photobtn'\r\n          type='button'\r\n          aria-label='Обновить фото профиля'\r\n          style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n        >\r\n          <div className='profile__photobtn-overlay' />\r\n        </button>\r\n        <h1 className='profile__name'>{currentUser.name}</h1>\r\n        <p className='profile__job'>{currentUser.about}</p>\r\n        <button\r\n          onMouseUp={() => onEditProfile()}\r\n          className='profile__edit-button hover-style'\r\n          type='button'\r\n          aria-label='Редактировать данные профиля'>\r\n        </button>\r\n        <button\r\n          onMouseUp={() => onAddPlace()}\r\n          className='profile__add-button hover-style'\r\n          type='button'\r\n          aria-label='Добавить карточку'>\r\n        </button>\r\n      </section>\r\n      <section className='gallery-cards'>\r\n        <ul className='gallery'>\r\n          {cards.map(card => (<Card key={card._id}\r\n            card={card}\r\n            onCardClick={onCardClick}\r\n            onCardLike={onCardLike}\r\n            onCardDelete={onCardDelete}\r\n          />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) { //selectedCard, onClose\r\n  function handleClick() {\r\n    onClose(card);\r\n  }\r\n  return (\r\n    <section className={`popup popup_zoom ${card.isImgPopupOpen ? 'popup_is-opened' : ''}`}>\r\n      <figure className='zoom'>\r\n        <button className='popup__close popup__close_figure hover-style' type='button'\r\n          aria-label='Закрыть картинку' onClick={handleClick} />\r\n        <img className='zoom__image' src={`${card.link}`} alt={`${card.name}`} />\r\n        <figcaption className='zoom__caption'>{`${card.name}`}</figcaption>\r\n      </figure>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n  constructor({\r\n    baseUrl,\r\n    headers\r\n  }) {\r\n    this.baseUrl = baseUrl\r\n    this.headers = headers\r\n  }\r\n\r\n  //Написать общие функции для Api.js (запрос, обработка ошибок, и.т.д)_common() {  }\r\n\r\n  getInitialItems() {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards`, {\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()//Написать общие функции для Api.js (запрос, обработка ошибок, и.т.д)\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  postItem({name, link}) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards`, {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name, link\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  deleteItem(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  patchUserAvatar(avatar) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify(avatar)\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me`, {\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  patchUserData({name, about}) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name,\r\n          about\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  putLike(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: 'PUT',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  deleteLike(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  changeLikeCardStatus(_id, isLiked) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          _id\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co',\r\n  headers: {\r\n      authorization: 'd53467ef-75db-4cf1-9a1c-2d2c544f18c8',\r\n      'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Api {\r\n//   constructor({\r\n//     baseUrl,\r\n//     headers\r\n//   }) {\r\n//     this.baseUrl = baseUrl\r\n//     this.headers = headers\r\n//   }\r\n\r\n//   getInitialItems() {\r\n//     return fetch(`${this.baseUrl}/cards`, {\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   getUserData() {\r\n//     // return fetch(`${this.baseUrl}/users/me`, {\r\n//     return fetch(`${this.baseUrl}/users/5f93590a3ea6942bc8a58414`, {\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n  \r\n//   postItem({name, link}) {\r\n//     return fetch(`${this.baseUrl}/cards`, {\r\n//         method: 'POST',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           name, link\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   deleteItem(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/${_id}`, {\r\n//         method: 'DELETE',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   patchUserAvatar(avatar) {\r\n//     return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n//         method: 'PATCH',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify(avatar)\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   patchUserData({name, about}) {\r\n//     return fetch(`${this.baseUrl}/users/me`, {\r\n//         method: 'PATCH',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           name,\r\n//           about\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   putLike(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: 'PUT',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   deleteLike(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: 'DELETE',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   changeLikeCardStatus(_id, isLiked) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           _id\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n// }\r\n\r\n// export const api = new Api({\r\n//   baseUrl: 'http://localhost:3000',\r\n//   headers: {\r\n//       authorization: 'd53467ef-75db-4cf1-9a1c-2d2c544f18c8',\r\n//       'Content-Type': 'application/json'\r\n//   }\r\n// })\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({ name, title, isOpen, onClose, onSubmit, children }) {\r\n  \r\n    return (\r\n      <section className={`popup ${isOpen?'popup_is-opened':''} popup_${name}`}>\r\n        <form className='popup__form' \r\n          action='#' \r\n          noValidate\r\n          onSubmit={onSubmit}>\r\n          <button \r\n            className='popup__close hover-style' \r\n            type='button'\r\n            aria-label='Закрыть окно без сохранения' \r\n            onClick={onClose} />\r\n          <fieldset className='popup__content'>\r\n            <h3 className='popup__title'>{`${title}`}</h3>\r\n            {children}\r\n          </fieldset>\r\n        </form>\r\n      </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser} ) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  \r\n  // добавьте стейт-переменные name и description и привяжите их к полям ввода, сделав их управляемыми.\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');  \r\n\r\n  useEffect(() => {  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChange(e) {\r\n    e.target.name === 'firstInp'\r\n      ? setName(e.target.value)  //   setValue(e.target.value);\r\n      : setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {    \r\n    e.preventDefault();      // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='profile-edit'\r\n      title='Редактировать профиль'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input className='popup__input popup__input_name'\r\n          type='text'\r\n          name='firstInp'\r\n          value={name || ''}\r\n          placeholder='Имя'\r\n          autoComplete='name'\r\n          required\r\n          minLength='2'\r\n          maxLength='40'\r\n          onChange={handleChange}\r\n        />\r\n        <span className='popup__error' />\r\n      </label>\r\n      <label className='popup__label'>\r\n        <input\r\n          className='popup__input popup__input_about'\r\n          type='text'\r\n          name='secondInp'\r\n          value={description || ''}\r\n          autoComplete='off'\r\n          placeholder='О себе'\r\n          required\r\n          minLength='2'\r\n          maxLength='200'\r\n          onChange={handleChange}\r\n        />\r\n        <span className='popup__error' />\r\n      </label>\r\n      <button className='popup__button'\r\n        type='submit'\r\n        aria-label='Сохранить изменения'>Сохранить</button>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const inputRef = React.useRef('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: inputRef.current.value /* Значение инпута, полученное с помощью рефа */\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='update-avatar'\r\n      title='Обновить аватар'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input\r\n          ref={inputRef}\r\n          className='popup__input popup__input_update-avatar'\r\n          name='thirdInp'\r\n          defaultValue=''\r\n          placeholder='Ссылка на фото'\r\n          type='url' />\r\n        <span className='popup__error' />\r\n      </label>\r\n      <button className='popup__button' \r\n        type='submit'\r\n        aria-label='Обновить фото пользователя'\r\n        value='Сохранить'>Обновить</button>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  // Стейт, в котором содержится значение инпута\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    link: ''\r\n  });\r\n\r\n\r\n  function handleChange(e) {  // Обработчик изменения инпута обновляет стейт\r\n    const input = e.target;\r\n    // const name = input.name;\r\n    // const value = input.value;\r\n    setForm({    // ( {...values, { [name]: value }} )\r\n      ...form,\r\n      [input.name]: input.value\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(form);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name='confirm'\r\n      title='Новое место'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className='popup__label'>\r\n        <input className='popup__input popup__input_place-name'\r\n          type='text'\r\n          name='name'\r\n          value={form.name} // Значение элемента «привязывается» к значению стейта\r\n          onChange={handleChange}\r\n          autoComplete='off'\r\n          placeholder='Название'\r\n          minLength='1'\r\n          maxLength='30'\r\n          required />\r\n        <span className='popup__error' />\r\n      </label>\r\n      <label className='popup__label'>\r\n        <input className='popup__input popup__input_image_url'\r\n          type='url'\r\n          inputMode='url'\r\n          name='link'\r\n          value={form.link}\r\n          onChange={handleChange}\r\n          placeholder='Ссылка на картинку'\r\n          required />\r\n        <span className='popup__error' />\r\n      </label>\r\n      <button className='popup__button'\r\n        type='submit'\r\n        aria-label='Сохранить новую карточку'>Создать\r\n      </button>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\n// import PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { api } from '../utils/api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function handleESCclose(evt) {\r\n      if (evt.key === \"Escape\") {\r\n        closeAllPopups();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleESCclose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleESCclose);\r\n    }\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   function handleOverlayClose(evt) {\r\n  //     if (evt.currentTarget !== evt.target) {\r\n  //       closeAllPopups();\r\n  //     }\r\n  //   }\r\n  //   document.querySelector('.popup_is-opened').addEventListener('click', handleOverlayClose);\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUserData(), api.getInitialItems()])\r\n      .then(([userInfo, cards]) => {\r\n        setCurrentUser(userInfo);\r\n        setCards(cards)\r\n      })\r\n      .catch((err) => {\r\n        console.log(`${err}`);\r\n      });\r\n  }, [])\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard({ ...card, isImgPopupOpen: true });\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  function closeAllPopups(card) {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({ ...card, isImgPopupOpen: false });\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api\r\n      .patchUserData({ name, about })\r\n      .then((res) => {\r\n        setCurrentUser(res)\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`${err}`);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {//{avatar: 'https://pictures.jpg'}\r\n    api\r\n      .patchUserAvatar(avatar)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`${err}`);\r\n      });\r\n  }\r\n\r\n  //Cards\r\n\r\n  function handleAddPlaceSubmit({name, link}) {\r\n    api\r\n      .postItem({name, link})\r\n      .then((newCard) => {\r\n        setCards([ newCard, ...cards ]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`${err}`);\r\n      });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`${err}`);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .deleteItem(card._id)\r\n      .then(() => {\r\n        setCards(cards.filter((item) => item !== card));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='page'>\r\n        <div className='page__container'>\r\n          <div className='page__header-and-main-wrapper'>\r\n            <Header />\r\n            <Main\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n            />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n        \r\n        <ImagePopup\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // 'Content is cached for offline use.' message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.661315c6.svg\";"],"sourceRoot":""}